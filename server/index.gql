# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""user"""
type User {
  email: String
  username: String
  password: String
  avatar: String
  isBan: Boolean
  user_level: userLevel
  token: String!
  isOnline: Boolean
}

enum userLevel {
  visitor
  normal
  manager
}

"""userlist"""
type UserList {
  list: [User!]
  count: Int
}

"""userlist"""
type Chat {
  from: String!
  to: String!
  type: String!
  message: String!
}

"""user"""
type Friend {
  userId: ID!
  friendId: ID!
}

type Query {
  currentUser: User!
  getUsers(queryUsersInput: QueryUsersInput!): UserList!
  getNotReadMessages: [Chat!]!
  getFriends: [User!]!
}

input QueryUsersInput {
  offset: Int!
  limit: Int!
}

type Mutation {
  createUser(newUserInput: NewUserInput!): User!
  removeUser(deleteUserInput: DeleteUserInput!): User!
  login(loginInput: LoginInput!): User!
  createMessage(createMessageInput: CreateMessageInput!): Chat!
  createFriend(newFriendInput: NewFriendInput!): Friend!
}

input NewUserInput {
  email: String!
  username: String!
  password: String!
  avatar: String
  isBan: Boolean
  passwd_salt: String
  user_level: String
}

input DeleteUserInput {
  email: String!
}

input LoginInput {
  email: String
  username: String
  password: String!
}

input CreateMessageInput {
  from: String!
  to: String!
  type: String!
  message: String!
}

input NewFriendInput {
  id: ID!
}

type Subscription {
  messageSent(username: String!): Chat!
}